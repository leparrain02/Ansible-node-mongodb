- name: Check if EPEL repo exists
  stat: 
    path: /etc/yum.repos.d/epel.repo
  register: stat_result
- block: 
  - name: get EPEL repo
    uri: 
      url: https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
      dest: /tmp/epel-release-latest-7.noarch.rpm
      method: GET
      creates: /tmp/epel-release-latest-7.noarch.rpm
  - name: Adding EPEL repo
    yum: name=/tmp/epel-release-latest-7.noarch.rpm state=present
  when: stat_result.stat.exists == False
- name: Check if npm dependencies is installed
  command: rpm -q http-parser
  register: pkg_result
  ignore_errors: true
- block:
  - name: get http-parser package
    uri: 
      url: http://springdale.math.ias.edu/data/puias/unsupported/7/x86_64/http-parser-2.7.1-3.sdl7.x86_64.rpm
      dest: /tmp/http-parser-2.7.1-3.sdl7.x86_64.rpm
      method: GET
      creates: /tmp/http-parser-2.7.1-3.sdl7.x86_64.rpm
  - name: Install http-parser
    yum: name=/tmp/http-parser-2.7.1-3.sdl7.x86_64.rpm state=present
  when: pkg_result|failed
- name: Node(NPM) installation
  yum: name=npm state=latest
- name: Application group creation
  group: name=nodeuser state=present
- name: Application user creation
  user:
    name: nodeuser
    group: nodeuser
    createhome: no
    home: "{{ app_dir }}"
    shell: /bin/false
- name: Application folder creation
  file: 
    path: "{{ app_dir }}"
    owner: nodeuser
    group: nodeuser
    mode: 0755
    state: directory
- name: Transfer application on remote host
  unarchive:
    src: customerapp.tgz
    dest: "{{ app_dir }}"
    owner: nodeuser
    group: nodeuser
- name: Node module installation
  command: npm install 
  args:
    chdir: "{{ app_dir }}"
    creates: "{{ app_dir }}/node_modules"
- name: environment varibles creation
  template: 
    src: config.env.js.j2
    dest: "{{ app_dirÂ }}/config/config.{{ app_env }}.js"
    mode: 0600
    owner: nodeuser
    group: nodeuser  
- name: NodeJS application service creation
  template:
    src: mynodeservice.service.j2
    dest: /etc/systemd/system/nodejsapp.service
    mode: 0644
    owner: root
    group: root
- name: Starting application
  service: name=nodejsapp state=started enabled=yes
